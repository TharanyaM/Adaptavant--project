package com.jdo.in;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.*;
import javax.jdo.PersistenceManager;

import java.util.InputMismatchException;
import java.util.Iterator;
import java.util.List;

import javax.jdo.Query;

import com.google.appengine.api.datastore.Key;
import com.google.appengine.api.datastore.KeyFactory;



@SuppressWarnings("serial")
public class JdoServlet extends HttpServlet {
	public void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws IOException, ServletException, InputMismatchException {
		{
		      // Create a session object if it is already not  created.
		      HttpSession session = req.getSession(true);
		      // Get session creation time.
		      Date createTime = new Date(session.getCreationTime());
		      // Get last access time of this web page.
		      Date lastAccessTime = 
		                        new Date(session.getLastAccessedTime());

		      String title = "Welcome Back to my website";
		      Integer visitCount = new Integer(0);
		      String visitCountKey = new String("visitCount");
		      String userIDKey = new String("userID");
		      String userID = new String("ABCD");

		      // Check if this is new comer on your web page.
		      if (session.isNew()){
		         title = "Welcome to my website";
		         session.setAttribute(userIDKey, userID);
		      } else {
		         visitCount = (Integer)session.getAttribute(visitCountKey);
		         visitCount = visitCount + 1;
		         userID = (String)session.getAttribute(userIDKey);
		      }
		      session.setAttribute(visitCountKey,  visitCount);
		      System.out.println(session.getId()+""+session.getCreationTime());

		//PrintWriter out=resp.getWriter();
		 
	        String name = req.getParameter("Name"); 
	        String adress=req.getParameter("Adress");
	        String email = req.getParameter("Email");
	        String password=req.getParameter("Password");
	        StuDetails sd=new StuDetails();
	        sd.setName(name);
	        sd.setAdress(adress);
	        sd.setEmail(email);
	        sd.setPassword(password);
	       PersistenceManager pm = PMF.get().getPersistenceManager();
	       pm.makePersistent(sd);
	       // Id used to get details
	     /* Object oid=pm.getObjectById(sd);
	      System.out.println(oid);*/
	      Query q = pm.newQuery(StuDetails.class,
                   "Name == '"+name+"'");
q.declareParameters("String NameParam");


List<StuDetails> results = (List<StuDetails>) q.execute(name);
Iterator ite=results.iterator();
while(ite.hasNext())
{
	StuDetails sd1=(StuDetails )ite.next();
	System.out.println("The user name"+sd1.getName()+"and email id"+sd1.getEmail());
	

}

/*Table1 locat = new Table1();
List<Table1> locations = ...;
for (int j = 0; j < coordinate.length; j++) {
    // ...
    locat.setCoordinate(loc);
    locations.add(locat);
}*/
	/* Key key = KeyFactory.createKey(StuDetails.class.getSimpleName(), "hello");

	        @SuppressWarnings("unchecked")
		StuDetails sd1=pm.getObjectById(StuDetails.class,"aglub19hcHBfaWRyFwsSClN0dURldGFpbHMYgICAgICA0AgM");
	        
	        System.out.println("the user name is "+sd1.getName()+" and password "+sd1.getPassword()+" and Email id"+sd1.getEmail());*/
	        
	       /* sd1.get(0);
	        Iterator<StuDetails> user=sd1.iterator();
	        while(user.hasNext()){
	        	System.out.println(user.next());
	        }*/
	     //sd.setKey(key);
	       
	      /*  try {
	        pm.makePersistent(sd);
	        }finally {
	        pm.close();
	        }
	        
	        
	        
	       /* Query q = pm.newQuery(StuDetails.class);
	        q.setFilter("studentName == studentNameParam");
	        q.setOrdering("height desc");
	        q.declareParameters("String studentNameParam");

	        try {
	          List<StuDetails> results = (List<StuDetails>) q.execute("tharanya");
	          if (!results.isEmpty()) {
	            for (StuDetails p : results) {
	              System.out.println(p);// Process result p
	            }
	          } else {
	            System.out.println("value not found");// Handle "no results" case
	          }
	        } finally {
	          q.closeAll();
	        }
	        	resp.setContentType("text/plain");
	      // resp.sendRedirect("/jdo/war/simple.jsp");*/
	       
resp.setContentType("text/html");
PrintWriter out= resp.getWriter();
System.out.println(session.getId()+""+createTime);
String docType =
"<!doctype html public \"-//w3c//dtd html 4.0 " +
"transitional//en\">\n";
out.println(docType +
          "<html>\n" +
          "<head><title>" + title + "</title></head>\n" +
          "<body bgcolor=\"#f0f0f0\">\n" +
          "<h1 align=\"center\">" + title + "</h1>\n" +
           "<h2 align=\"center\">Session Infomation</h2>\n" +
          "<table border=\"1\" align=\"center\">\n" +
          "<tr bgcolor=\"#949494\">\n" +
          "  <th>Session info</th><th>value</th></tr>\n" +
          "<tr>\n" +
          "  <td>id</td>\n" +
          "  <td>" + session.getId() + "</td></tr>\n" +
          "<tr>\n" +
          "  <td>Creation Time</td>\n" +
          "  <td>" + createTime + 
          "  </td></tr>\n" +
          "<tr>\n" +
          "  <td>Time of Last Access</td>\n" +
          "  <td>" + lastAccessTime + 
          "  </td></tr>\n" +
          "<tr>\n" +
          "  <td>User ID</td>\n" +
          "  <td>" + userID + 
          "  </td></tr>\n" +
          "<tr>\n" +
          "  <td>Number of visits</td>\n" +
          "  <td>" + visitCount + "</td></tr>\n" +
          "</table>\n" +
          "</body></html>");
}}
		//req.getRequestDispatcher("todo.html").include(req,resp);
		//out.println("Loggin Sucessfully");
		
		
	

	private StuDetails getKey() {
		// TODO Auto-generated method stub
		return null;
	}

	private PersistenceManager getPMF() {
		// TODO Auto-generated method stub
		return null;
	}
}
